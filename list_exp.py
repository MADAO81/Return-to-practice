# Дан список, заполненный произвольными целыми числами.
# Примечание: для генерации списка используйте функцию написанную на одном из прошлых занятий.
# Получите новый список, элементами которого будут:
#   1. неповторяющиеся(уникальные) элементы исходного списка:
#   например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
#   2. элементы исходного списка, которые не имеют повторений(встречаются только один раз):
#   например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]
import random


# 1. неповторяющиеся(уникальные)
def gen_list(size, at=-10, to=10):
    numbers = []
    for _ in range(size): # по традиции нижнее подчёркивание используют для того, чтобы показать,
        # что эта переменная нигде дальше не используется. То есть мы используем какую-то синтаксическую конструкцию,
        # в которой требуется создать новую переменную, но нам нужна не эта переменная,
        # а какие-то другие эффекты от данной синтаксической конструкции.
        numbers.append(random.randint(at, to))
    return numbers


base_list = gen_list(10, at=-10, to=6)
print(base_list)
# unique = []
# for el in base_list:
#     if el not in unique:
#         unique.append(el)
unique = list(set(base_list)) # set делает множество без дубликатов, list делает список
print(unique)

# 2. элементы исходного списка, которые не имеют повторений
# only_one = []
# for el in base_list:
#     if base_list.count(el) == 1:
#         only_one.append(el)
only_one = [el for el in base_list if base_list.count(el) == 1]
print(only_one)